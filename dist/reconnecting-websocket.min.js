!function(){function CustomEvent(event,params){params=params||{bubbles:!1,cancelable:!1,detail:void 0};var evt=document.createEvent("CustomEvent");return evt.initCustomEvent(event,params.bubbles,params.cancelable,params.detail),evt}CustomEvent.prototype=window.Event.prototype,window.CustomEvent=CustomEvent}(),function(global,factory){"function"==typeof define&&define.amd?define([],factory):"undefined"!=typeof module&&module.exports?module.exports=factory():global.ReconnectingWebSocket=factory()}(this,function(){function ReconnectingWebSocket(url,protocols,options){var settings={automaticOpen:!0,binaryType:"blob",debug:!1,ignoreProxyConnectionErrors:!0,maxReconnectAttempts:null,maxReconnectInterval:3e4,randomizeReconnect:!1,reconnectDecay:1.5,reconnectInterval:1e3,timeoutInterval:2e3};options||(options={});for(var key in settings)"undefined"!=typeof options[key]?this[key]=options[key]:this[key]=settings[key];this.url=url,this.reconnectAttempts=0,this.readyState=WebSocket.CONNECTING,this.protocol=null;var ws,self=this,forcedClose=!1,timedOut=!1,eventTarget=document.createElement("div");eventTarget.addEventListener("open",function(event){self.onopen(event)}),eventTarget.addEventListener("close",function(event){self.onclose(event)}),eventTarget.addEventListener("connecting",function(event){self.onconnecting(event)}),eventTarget.addEventListener("message",function(event){self.onmessage(event)}),eventTarget.addEventListener("error",function(event){self.onerror(event)}),this.addEventListener=eventTarget.addEventListener.bind(eventTarget),this.removeEventListener=eventTarget.removeEventListener.bind(eventTarget),this.dispatchEvent=eventTarget.dispatchEvent.bind(eventTarget),this.open=function(reconnectAttempt){if(ws=new WebSocket(self.url,protocols||[]),ws.binaryType=this.binaryType,reconnectAttempt){if(this.maxReconnectAttempts&&this.reconnectAttempts>this.maxReconnectAttempts)return}else eventTarget.dispatchEvent(new CustomEvent("connecting")),this.reconnectAttempts=0;(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","attempt-connect",self.url);var localWs=ws,timeout=setTimeout(function(){(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","connection-timeout",self.url),timedOut=!0,localWs.close(),timedOut=!1},self.timeoutInterval);ws.onopen=function(event){clearTimeout(timeout),(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","onopen",self.url,event),self.protocol=ws.protocol,self.readyState=WebSocket.OPEN,self.reconnectAttempts=0,eventTarget.dispatchEvent(new CustomEvent("open",{detail:{isReconnect:reconnectAttempt}})),reconnectAttempt=!1},ws.onclose=function(event){if(clearTimeout(timeout),ws=null,forcedClose)self.readyState=WebSocket.CLOSED,eventTarget.dispatchEvent(new CustomEvent("close",{detail:{code:event.code,reason:event.reason,wasClean:event.wasClean}}));else{if(self.readyState=WebSocket.CONNECTING,eventTarget.dispatchEvent(new CustomEvent("connecting",{detail:{code:event.code,reason:event.reason,wasClean:event.wasClean}})),!reconnectAttempt&&!timedOut&&((self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","onclose",self.url,event),eventTarget.dispatchEvent(new CustomEvent("close",{detail:{code:event.code,reason:event.reason,wasClean:event.wasClean}})),!self.ignoreProxyConnectionErrors))switch(event.code){case 1002:case 1003:case 1004:case 1005:case 1006:case 1007:case 1008:case 1009:return}var timeout=(self.reconnectInterval+(self.randomizeReconnect?Math.random():0))*Math.pow(self.reconnectDecay,self.reconnectAttempts);setTimeout(function(){self.reconnectAttempts++,self.open(!0)},timeout>self.maxReconnectInterval?self.maxReconnectInterval:timeout)}},ws.onmessage=function(event){(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","onmessage",self.url,event),eventTarget.dispatchEvent(new CustomEvent("message",{detail:{data:event.data}}))},ws.onerror=function(event){(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","onerror",self.url,event),eventTarget.dispatchEvent(new CustomEvent("error"))}},1==this.automaticOpen&&this.open(!1),this.send=function(data){if(ws)return(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","send",self.url,data),ws.send(data);throw"INVALID_STATE_ERR : Pausing to reconnect websocket"},this.close=function(code,reason){"undefined"==typeof code&&(code=1e3),forcedClose=!0,ws&&ws.close(code,reason)},this.refresh=function(){ws&&ws.close()}}if("WebSocket"in window)return ReconnectingWebSocket.prototype.onopen=function(event){},ReconnectingWebSocket.prototype.onclose=function(event){},ReconnectingWebSocket.prototype.onconnecting=function(event){},ReconnectingWebSocket.prototype.onmessage=function(event){},ReconnectingWebSocket.prototype.onerror=function(event){},ReconnectingWebSocket.debugAll=!1,ReconnectingWebSocket.CONNECTING=WebSocket.CONNECTING,ReconnectingWebSocket.OPEN=WebSocket.OPEN,ReconnectingWebSocket.CLOSING=WebSocket.CLOSING,ReconnectingWebSocket.CLOSED=WebSocket.CLOSED,ReconnectingWebSocket});